{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\mern-task-management-dev\\\\mern-task-management-dev\\\\client\\\\src\\\\components\\\\utils\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Layout from \"../layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    var _JSON$parse;\n    const accessToken = (_JSON$parse = JSON.parse(localStorage.getItem(\"mern-task-management/user\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.accessToken;\n    if (accessToken) {\n      setIsAuthenticated(true);\n    } else {\n      console.log(\"Empty localStorage, redirecting to login\");\n      navigate(\"/entry\");\n    }\n  }, []);\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      loggedIn: isAuthenticated,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  } else {\n    // If not authenticated, you might want to render something else, like a loading spinner or a message\n    return null;\n  }\n};\n_s(ProtectedRoute, \"mgf0uBMm91UcNMU3KryowPP1/8E=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Layout","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","navigate","isAuthenticated","setIsAuthenticated","_JSON$parse","accessToken","JSON","parse","localStorage","getItem","console","log","loggedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/mern-task-management-dev/mern-task-management-dev/client/src/components/utils/ProtectedRoute.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Layout from \"../layout\";\n\nconst ProtectedRoute = ({ children }) => {\n  const navigate = useNavigate();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  useEffect(() => {\n    const accessToken = JSON.parse(localStorage.getItem(\"mern-task-management/user\"))?.accessToken;\n    if (accessToken) {\n      setIsAuthenticated(true);\n    } else {\n      console.log(\"Empty localStorage, redirecting to login\");\n      navigate(\"/entry\");\n    }\n  }, []);\n\n  if (isAuthenticated) {\n    return <Layout loggedIn={isAuthenticated}>{children}</Layout>;\n  } else {\n    // If not authenticated, you might want to render something else, like a loading spinner or a message\n    return null;\n  }\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IAAA,IAAAY,WAAA;IACd,MAAMC,WAAW,IAAAD,WAAA,GAAGE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAC,cAAAL,WAAA,uBAA7DA,WAAA,CAA+DC,WAAW;IAC9F,IAAIA,WAAW,EAAE;MACfF,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLO,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvDV,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,eAAe,EAAE;IACnB,oBAAOL,OAAA,CAACF,MAAM;MAACiB,QAAQ,EAAEV,eAAgB;MAAAH,QAAA,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAC/D,CAAC,MAAM;IACL;IACA,OAAO,IAAI;EACb;AACF,CAAC;AAAChB,EAAA,CApBIF,cAAc;EAAA,QACDJ,WAAW;AAAA;AAAAuB,EAAA,GADxBnB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}